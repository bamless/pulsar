import io

import parse.parser for Parser
import parse.source as source

static var BUILTIN_NAMES   = ["core.jsr", "debug.jsr", "io.jsr", "math.jsr", "re.jsr", "sys.jsr"]
static var BUILTIN_STORAGE = "pulsar/builtins"

static var builtinCache   = {}

fun getBuiltinModule(name)
    return builtinCache[name]
end

static fun cacheBuiltin(name, path)
    var src = null
    try
        src = source.fromFile(path)
    except io.IOException _
        return false
    end

    var parser = Parser(src, fun(msg_, tok_) end)
    var ast = parser.parse()
    if !ast return false end

    builtinCache[name] = ast
    return true
end

for var moduleName in BUILTIN_NAMES
    var storageName = moduleName + ".bltin"
    var cached = cacheBuiltin(moduleName, "{0}/{1}" % (BUILTIN_STORAGE, storageName))

    if !cached
        for var path in importPaths
            cached = cacheBuiltin(moduleName, "{0}/{1}/{2}" % (path, BUILTIN_STORAGE, storageName))
            if cached break end
        end
    end

    assert(cached, "Cannot cache builtin module `{0}`" % moduleName)
end